; Armv7-M optional MPU


[Sfr]

;                 MPU
;
;     Name                             Zone      Address     Bytesize  Displaybase  Bitrange
;     ----                             ----      -------     --------  -----------  --------

; MPU_TYPE is a common register

sfr = "MPU_CTRL"                     , "Memory", 0xE000ED94, 4, base=16, tooltip="MPU Control Register"
sfr = "MPU_CTRL.ENABLE"              , "Memory", 0xE000ED94, 4, base=16, bitRange=0-0, tooltip="Enables the MPU.\n0: The MPU is disabled.\n1: The MPU is enabled."
sfr = "MPU_CTRL.HFNMIENA"            , "Memory", 0xE000ED94, 4, base=16, bitRange=1-1, tooltip="When the ENABLE bit is set to 1, controls whether handlers executing with priority less than 0 access memory with the MPU enabled or with the MPU disabled. This applies to HardFaults, NMIs, and exception handlers when FAULTMASK is set to 1.\n0: Disables the MPU for these handlers.\n1: Use the MPU for memory accesses by these handlers.\nIf HFNMIENA is set to 1 when ENABLE is set to 0, behavior is unpredictable."
sfr = "MPU_CTRL.PRIVDEFENA"          , "Memory", 0xE000ED94, 4, base=16, bitRange=2-2, tooltip="When the ENABLE bit is set to 1, the meaning of this bit is:\n0: Disables the default memory map. Any instruction or data access that does not access a defined region faults.\n1: Enables the default memory map as a background region for privileged access. The background region acts as region number -1. All memory regions configured in the MPU take priority over the default memory map.\nWhen the ENABLE bit is set to 0, the processor ignores the PRIVDEFENA bit.\nIf no regions are enabled and the PRIVDEFENA and ENABLE bits are set to 1, only privileged code can execute from the system address map."

sfr = "MPU_RNR"                      , "Memory", 0xE000ED98, 4, base=16, tooltip="MPU Region Number Register"
sfr = "MPU_RNR.REGION"               , "Memory", 0xE000ED98, 4, base=16, bitRange=0-7, tooltip="Indicates the memory region accessed by MPU_RBAR and MPU_RASR."

sfr = "MPU_RBAR"                     , "Memory", 0xE000ED9C, 4, base=16, tooltip="MPU Base Address Register"
sfr = "MPU_RBAR.REGION"              , "Memory", 0xE000ED9C, 4, base=16, bitRange=0-3, tooltip="On writes, can specify the number of the region to update, see VALID field description.\nOn reads, returns bits[3:0] of MPU_RNR."
sfr = "MPU_RBAR.VALID"               , "Memory", 0xE000ED9C, 4, base=16, bitRange=4-4, tooltip="On writes, indicates whether the region to update is specified by MPU_RNR.REGION, or by the REGION value specified in this write. When using the REGION value specified by this write, MPU_RNR.REGION is updated to this value.\n0: Apply the base address update to the region specified by MPU_RNR.REGION. The REGION field value is ignored.\n1: Update MPU_RNR.REGION to the value obtained by zero extending the REGION value specified in this write, and apply the base address update to this region.\nThis bit reads as zero."
sfr = "MPU_RBAR.ADDR"                , "Memory", 0xE000ED9C, 4, base=16, bitRange=5-31, tooltip="Base address of the region."

sfr = "MPU_RASR"                     , "Memory", 0xE000EDA0, 4, base=16, tooltip="MPU Region Attribute Register"
sfr = "MPU_RASR.ENABLE"              , "Memory", 0xE000EDA0, 4, base=16, bitRange=0-0, tooltip="Enables this region.\n0: When the MPU is enabled, this region is disabled.\n1: When the MPU is enabled, this region is enabled.\nEnabling a region has no effect unless the MPU_CTRL.ENABLE bit is set to 1, to enable the MPU."
sfr = "MPU_RASR.SIZE"                , "Memory", 0xE000EDA0, 4, base=16, bitRange=1-5, tooltip="Indicates the region size.\nThe region size, in bytes, is 2^(SIZE+1). SIZE field values less than 4 are reserved, because the smallest supported region size is 32 bytes."
sfr = "MPU_RASR.SRD"                 , "Memory", 0xE000EDA0, 4, base=16, bitRange=8-15, tooltip="Subregion Disable.\nFor regions of 256 bytes or larger, each bit of this field controls whether one of the eight equal subregions is enabled.\n0: Subregion enabled.\n1: Subregion disabled."
sfr = "MPU_RASR.B"                   , "Memory", 0xE000EDA0, 4, base=16, bitRange=16-16, tooltip="Bufferable.\nThe TEX, C, and B fields together indicate the memory type of the region, and:\n— For Normal memory, the cacheable properties of the region.\n— For Device memory, whether the region is shareable."
sfr = "MPU_RASR.C"                   , "Memory", 0xE000EDA0, 4, base=16, bitRange=17-17, tooltip="Cacheable.\nThe TEX, C, and B fields together indicate the memory type of the region, and:\n— For Normal memory, the cacheable properties of the region.\n— For Device memory, whether the region is shareable."
sfr = "MPU_RASR.S"                   , "Memory", 0xE000EDA0, 4, base=16, bitRange=18-18, tooltip="Shareable.\nFor Normal memory regions, indicates whether the region is shareable."
sfr = "MPU_RASR.TEX"                 , "Memory", 0xE000EDA0, 4, base=16, bitRange=19-21, tooltip="Type extension.\nThe TEX, C, and B fields together indicate the memory type of the region, and:\n— For Normal memory, the cacheable properties of the region.\n— For Device memory, whether the region is shareable."
sfr = "MPU_RASR.AP"                  , "Memory", 0xE000EDA0, 4, base=16, bitRange=24-26, tooltip="Access permissions.\nIndicate the access and privilege properties of the region.\n0x0: Any access generates a permission fault.\n0x1: Privileged access only.\n0x2: Any unprivileged write generates a permission fault.\n0x3: Full access.\n0x4: Reserved.\n0x5: Privileged read-only.\n0x6: Privileged and unprivileged read-only.\n0x7: Privileged and unprivileged read-only."
sfr = "MPU_RASR.XN"                  , "Memory", 0xE000EDA0, 4, base=16, bitRange=28-28, tooltip="Execute Never.\nIndicates whether the processor can execute instructions from the region.\n0: Execution of an instruction fetched from this region permitted.\n1: Execution of an instruction fetched from this region not permitted."

sfr = "MPU_RBAR_A1"                  , "Memory", 0xE000EDA4, 4, base=16, tooltip="MPU Base Address Register Alias 1"
sfr = "MPU_RBAR_A1.REGION"           , "Memory", 0xE000EDA4, 4, base=16, bitRange=0-3, tooltip="On writes, can specify the number of the region to update, see VALID field description.\nOn reads, returns bits[3:0] of MPU_RNR."
sfr = "MPU_RBAR_A1.VALID"            , "Memory", 0xE000EDA4, 4, base=16, bitRange=4-4, tooltip="On writes, indicates whether the region to update is specified by MPU_RNR.REGION, or by the REGION value specified in this write. When using the REGION value specified by this write, MPU_RNR.REGION is updated to this value.\n0: Apply the base address update to the region specified by MPU_RNR.REGION. The REGION field value is ignored.\n1: Update MPU_RNR.REGION to the value obtained by zero extending the REGION value specified in this write, and apply the base address update to this region.\nThis bit reads as zero."
sfr = "MPU_RBAR_A1.ADDR"             , "Memory", 0xE000EDA4, 4, base=16, bitRange=5-31, tooltip="Base address of the region."

sfr = "MPU_RASR_A1"                  , "Memory", 0xE000EDA8, 4, base=16, tooltip="MPU Region Attribute Register Alias 1"
sfr = "MPU_RASR_A1.ENABLE"           , "Memory", 0xE000EDA8, 4, base=16, bitRange=0-0, tooltip="Enables this region.\n0: When the MPU is enabled, this region is disabled.\n1: When the MPU is enabled, this region is enabled.\nEnabling a region has no effect unless the MPU_CTRL.ENABLE bit is set to 1, to enable the MPU."
sfr = "MPU_RASR_A1.SIZE"             , "Memory", 0xE000EDA8, 4, base=16, bitRange=1-5, tooltip="Indicates the region size.\nThe region size, in bytes, is 2^(SIZE+1). SIZE field values less than 4 are reserved, because the smallest supported region size is 32 bytes."
sfr = "MPU_RASR_A1.SRD"              , "Memory", 0xE000EDA8, 4, base=16, bitRange=8-15, tooltip="Subregion Disable.\nFor regions of 256 bytes or larger, each bit of this field controls whether one of the eight equal subregions is enabled.\n0: Subregion enabled.\n1: Subregion disabled."
sfr = "MPU_RASR_A1.B"                , "Memory", 0xE000EDA8, 4, base=16, bitRange=16-16, tooltip="Bufferable.\nThe TEX, C, and B fields together indicate the memory type of the region, and:\n— For Normal memory, the cacheable properties of the region.\n— For Device memory, whether the region is shareable.""
sfr = "MPU_RASR_A1.C"                , "Memory", 0xE000EDA8, 4, base=16, bitRange=17-17, tooltip="Cacheable.\nThe TEX, C, and B fields together indicate the memory type of the region, and:\n— For Normal memory, the cacheable properties of the region.\n— For Device memory, whether the region is shareable."
sfr = "MPU_RASR_A1.S"                , "Memory", 0xE000EDA8, 4, base=16, bitRange=18-18, tooltip="Shareable.\nFor Normal memory regions, indicates whether the region is shareable."
sfr = "MPU_RASR_A1.TEX"              , "Memory", 0xE000EDA8, 4, base=16, bitRange=19-21, tooltip="Type extension.\nThe TEX, C, and B fields together indicate the memory type of the region, and:\n— For Normal memory, the cacheable properties of the region.\n— For Device memory, whether the region is shareable."
sfr = "MPU_RASR_A1.AP"               , "Memory", 0xE000EDA8, 4, base=16, bitRange=24-26, tooltip="Access permissions.\nIndicate the access and privilege properties of the region.\n0x0: Any access generates a permission fault.\n0x1: Privileged access only.\n0x2: Any unprivileged write generates a permission fault.\n0x3: Full access.\n0x4: Reserved.\n0x5: Privileged read-only.\n0x6: Privileged and unprivileged read-only.\n0x7: Privileged and unprivileged read-only."
sfr = "MPU_RASR_A1.XN"               , "Memory", 0xE000EDA8, 4, base=16, bitRange=28-28, tooltip="Execute Never.\nIndicates whether the processor can execute instructions from the region.\n0: Execution of an instruction fetched from this region permitted.\n1: Execution of an instruction fetched from this region not permitted."

sfr = "MPU_RBAR_A2"                  , "Memory", 0xE000EDAC, 4, base=16, tooltip="MPU Base Address Register Alias 2"
sfr = "MPU_RBAR_A2.REGION"           , "Memory", 0xE000EDAC, 4, base=16, bitRange=0-3, tooltip="On writes, can specify the number of the region to update, see VALID field description.\nOn reads, returns bits[3:0] of MPU_RNR."
sfr = "MPU_RBAR_A2.VALID"            , "Memory", 0xE000EDAC, 4, base=16, bitRange=4-4, tooltip="On writes, indicates whether the region to update is specified by MPU_RNR.REGION, or by the REGION value specified in this write. When using the REGION value specified by this write, MPU_RNR.REGION is updated to this value.\n0: Apply the base address update to the region specified by MPU_RNR.REGION. The REGION field value is ignored.\n1: Update MPU_RNR.REGION to the value obtained by zero extending the REGION value specified in this write, and apply the base address update to this region.\nThis bit reads as zero."
sfr = "MPU_RBAR_A2.ADDR"             , "Memory", 0xE000EDAC, 4, base=16, bitRange=5-31, tooltip="Base address of the region."

sfr = "MPU_RASR_A2"                  , "Memory", 0xE000EDB0, 4, base=16, tooltip="MPU Region Attribute Register Alias 2"
sfr = "MPU_RASR_A2.ENABLE"           , "Memory", 0xE000EDB0, 4, base=16, bitRange=0-0, tooltip="Enables this region.\n0: When the MPU is enabled, this region is disabled.\n1: When the MPU is enabled, this region is enabled.\nEnabling a region has no effect unless the MPU_CTRL.ENABLE bit is set to 1, to enable the MPU."
sfr = "MPU_RASR_A2.SIZE"             , "Memory", 0xE000EDB0, 4, base=16, bitRange=1-5, tooltip="Indicates the region size.\nThe region size, in bytes, is 2^(SIZE+1). SIZE field values less than 4 are reserved, because the smallest supported region size is 32 bytes."
sfr = "MPU_RASR_A2.SRD"              , "Memory", 0xE000EDB0, 4, base=16, bitRange=8-15, tooltip="Subregion Disable.\nFor regions of 256 bytes or larger, each bit of this field controls whether one of the eight equal subregions is enabled.\n0: Subregion enabled.\n1: Subregion disabled."
sfr = "MPU_RASR_A2.B"                , "Memory", 0xE000EDB0, 4, base=16, bitRange=16-16, tooltip="Bufferable.\nThe TEX, C, and B fields together indicate the memory type of the region, and:\n— For Normal memory, the cacheable properties of the region.\n— For Device memory, whether the region is shareable.""
sfr = "MPU_RASR_A2.C"                , "Memory", 0xE000EDB0, 4, base=16, bitRange=17-17, tooltip="Cacheable.\nThe TEX, C, and B fields together indicate the memory type of the region, and:\n— For Normal memory, the cacheable properties of the region.\n— For Device memory, whether the region is shareable."
sfr = "MPU_RASR_A2.S"                , "Memory", 0xE000EDB0, 4, base=16, bitRange=18-18, tooltip="Shareable.\nFor Normal memory regions, indicates whether the region is shareable."
sfr = "MPU_RASR_A2.TEX"              , "Memory", 0xE000EDB0, 4, base=16, bitRange=19-21, tooltip="Type extension.\nThe TEX, C, and B fields together indicate the memory type of the region, and:\n— For Normal memory, the cacheable properties of the region.\n— For Device memory, whether the region is shareable."
sfr = "MPU_RASR_A2.AP"               , "Memory", 0xE000EDB0, 4, base=16, bitRange=24-26, tooltip="Access permissions.\nIndicate the access and privilege properties of the region.\n0x0: Any access generates a permission fault.\n0x1: Privileged access only.\n0x2: Any unprivileged write generates a permission fault.\n0x3: Full access.\n0x4: Reserved.\n0x5: Privileged read-only.\n0x6: Privileged and unprivileged read-only.\n0x7: Privileged and unprivileged read-only."
sfr = "MPU_RASR_A2.XN"               , "Memory", 0xE000EDB0, 4, base=16, bitRange=28-28, tooltip="Execute Never.\nIndicates whether the processor can execute instructions from the region.\n0: Execution of an instruction fetched from this region permitted.\n1: Execution of an instruction fetched from this region not permitted."

sfr = "MPU_RBAR_A3"                  , "Memory", 0xE000EDB4, 4, base=16, tooltip="MPU Base Address Register Alias 3"
sfr = "MPU_RBAR_A3.REGION"           , "Memory", 0xE000EDB4, 4, base=16, bitRange=0-3, tooltip="On writes, can specify the number of the region to update, see VALID field description.\nOn reads, returns bits[3:0] of MPU_RNR."
sfr = "MPU_RBAR_A3.VALID"            , "Memory", 0xE000EDB4, 4, base=16, bitRange=4-4, tooltip="On writes, indicates whether the region to update is specified by MPU_RNR.REGION, or by the REGION value specified in this write. When using the REGION value specified by this write, MPU_RNR.REGION is updated to this value.\n0: Apply the base address update to the region specified by MPU_RNR.REGION. The REGION field value is ignored.\n1: Update MPU_RNR.REGION to the value obtained by zero extending the REGION value specified in this write, and apply the base address update to this region.\nThis bit reads as zero."
sfr = "MPU_RBAR_A3.ADDR"             , "Memory", 0xE000EDB4, 4, base=16, bitRange=5-31, tooltip="Base address of the region."

sfr = "MPU_RASR_A3"                  , "Memory", 0xE000EDB8, 4, base=16, tooltip="MPU Region Attribute Register Alias 3"
sfr = "MPU_RASR_A3.ENABLE"           , "Memory", 0xE000EDB8, 4, base=16, bitRange=0-0, tooltip="Enables this region.\n0: When the MPU is enabled, this region is disabled.\n1: When the MPU is enabled, this region is enabled.\nEnabling a region has no effect unless the MPU_CTRL.ENABLE bit is set to 1, to enable the MPU."
sfr = "MPU_RASR_A3.SIZE"             , "Memory", 0xE000EDB8, 4, base=16, bitRange=1-5, tooltip="Indicates the region size.\nThe region size, in bytes, is 2^(SIZE+1). SIZE field values less than 4 are reserved, because the smallest supported region size is 32 bytes."
sfr = "MPU_RASR_A3.SRD"              , "Memory", 0xE000EDB8, 4, base=16, bitRange=8-15, tooltip="Subregion Disable.\nFor regions of 256 bytes or larger, each bit of this field controls whether one of the eight equal subregions is enabled.\n0: Subregion enabled.\n1: Subregion disabled."
sfr = "MPU_RASR_A3.B"                , "Memory", 0xE000EDB8, 4, base=16, bitRange=16-16, tooltip="Bufferable.\nThe TEX, C, and B fields together indicate the memory type of the region, and:\n— For Normal memory, the cacheable properties of the region.\n— For Device memory, whether the region is shareable.""
sfr = "MPU_RASR_A3.C"                , "Memory", 0xE000EDB8, 4, base=16, bitRange=17-17, tooltip="Cacheable.\nThe TEX, C, and B fields together indicate the memory type of the region, and:\n— For Normal memory, the cacheable properties of the region.\n— For Device memory, whether the region is shareable."
sfr = "MPU_RASR_A3.S"                , "Memory", 0xE000EDB8, 4, base=16, bitRange=18-18, tooltip="Shareable.\nFor Normal memory regions, indicates whether the region is shareable."
sfr = "MPU_RASR_A3.TEX"              , "Memory", 0xE000EDB8, 4, base=16, bitRange=19-21, tooltip="Type extension.\nThe TEX, C, and B fields together indicate the memory type of the region, and:\n— For Normal memory, the cacheable properties of the region.\n— For Device memory, whether the region is shareable."
sfr = "MPU_RASR_A3.AP"               , "Memory", 0xE000EDB8, 4, base=16, bitRange=24-26, tooltip="Access permissions.\nIndicate the access and privilege properties of the region.\n0x0: Any access generates a permission fault.\n0x1: Privileged access only.\n0x2: Any unprivileged write generates a permission fault.\n0x3: Full access.\n0x4: Reserved.\n0x5: Privileged read-only.\n0x6: Privileged and unprivileged read-only.\n0x7: Privileged and unprivileged read-only."
sfr = "MPU_RASR_A3.XN"               , "Memory", 0xE000EDB8, 4, base=16, bitRange=28-28, tooltip="Execute Never.\nIndicates whether the processor can execute instructions from the region.\n0: Execution of an instruction fetched from this region permitted.\n1: Execution of an instruction fetched from this region not permitted."
